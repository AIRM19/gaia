// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Producto {
  id Int @id @default(autoincrement())
  titulo String 
  descripcion String
  precio Int
  opciones Opcion[]
  pedidos ProductosEnPedido[]
  cantidadOpciones Int @default(0)
  cantidad Int @default(0)
  opcionesPedido OpcionesEnPedido[]
}

model Pedido {
  id String @id @default(nanoid(4))
  nombre String
  productos ProductosEnPedido[]
  total Int
  estado Boolean @default(false)
  opcionesPedido OpcionesEnPedido[]
  fecha DateTime @default(now())
}

model ProductosEnPedido {
  pedido Pedido @relation(fields: [pedidoId], references: [id])
  pedidoId String
  producto Producto @relation(fields: [productoId], references: [id])
  productoId Int
  cantidad Int
  @@id([pedidoId,productoId])  
}

model Opcion {
  id Int @id @default(autoincrement())
  titulo String
  productos Producto[]
  opcionesPedido OpcionesEnPedido[]
  cantidad Int @default(0)
}

model OpcionesEnPedido {
  pedido Pedido @relation(fields: [pedidoId], references: [id])
  pedidoId String
  opcion Opcion @relation(fields: [opcionId], references: [id])
  opcionId Int
  producto Producto @relation(fields: [productoId], references: [id])
  productoId Int
  cantidad Int
  @@id([opcionId,pedidoId,productoId])
}
